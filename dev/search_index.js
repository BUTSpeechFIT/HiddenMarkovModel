var documenterSearchIndex = {"docs":
[{"location":"fsm/#Finite-State-Machines","page":"Finite State Machines","title":"Finite State Machines","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"The MarkovModels package represents Markov chains as probabilistic a Finite State Machine (FSM).  Here is an example of FSM as used by the package:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: alternative text)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"The double edge circle node with the label \"<s>\" (respectively \"</s>\") is the initial (respectively final) state of the FSM. States with light blue background color are emitting states, that is, they are associated with a probability density function index (pdfindex). If they have no label, this index is use when displaying the node - as in the example above. White circle node with a label written inside are non-emitting labeled states. The states represented as point are neither emitting nor have a label. Finally, the number on the links are the log-probabilities to move from one state to another.","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"note: Note\nTo be able to visualize FSMs as in the example above when using IJulia, make sure that the dot program (from graphviz) is available in your shell PATH variable. Also, you won't be able to visualize the FSM in the REPL.","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"In the following, we present the tools provided by the package manipulate such FSM. All the examples below assume that you have already imported the MarkovModels package by doing using MarkovModels.","category":"page"},{"location":"fsm/#Creating-FSMs","page":"Finite State Machines","title":"Creating FSMs","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"FSMs are represented by the following structure:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"FSM","category":"page"},{"location":"fsm/#MarkovModels.FSM","page":"Finite State Machines","title":"MarkovModels.FSM","text":"struct FSM{T}\n    ...\nend\n\nStructure of a FSM. The type T indicates the type of the arcs' weight.\n\n\n\n\n\n","category":"type"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"To create an FSM object simply type:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = FSM{Float64}()","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: alternative text)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"When created, the FSM has only two states: the initial state and the final state. FSMs cannot have multiple initial for final states.","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"You can add states to the FSM by using the function addstate!:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"s1 = addstate!(fsm, pdfindex = 1)\ns2 = addstate!(fsm, pdfindex = 2, label = \"a\")\ns3 = addstate!(fsm, label = \"b\")\ns4 = addstate!(fsm)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: alternative text)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Note that a state can be:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"emitting and labeled\nemitting only\nlabeled only\nnon-emitting and non-labeled (nil state)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"The initial and final states are specific nil states.","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"The link! allows to add weighted arcs between states:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"link!(initstate(fsm), s1)\nlink!( s1, s1, log(1/2))\nlink!(s1, s2, log(1/2))\nlink!(s2, s3)\nlink!(s3, s4)\nlink!(s4, finalstate(fsm))","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: alternative text)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Finally, we provide a special constructor for convenience:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"LinearFSM","category":"page"},{"location":"fsm/#MarkovModels.LinearFSM","page":"Finite State Machines","title":"MarkovModels.LinearFSM","text":"LinearFSM([T, ]seq[, emissionsmap::Dict{<:Label, <:PdfIndex}])\n\nCreate a linear FSM of type T from a sequence of labels seq. If emissionsmap is provided, every item l of seq with a matching entry in emissionsmap will be assigned the pdf index emissionsmap[l]. PdfIndex can be any integer type and Label any string type.\n\n\n\n\n\n","category":"function"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"For instance,","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = LinearFSM(Float32, [\"a\", \"b\", \"c\"], Dict(\"a\" => 1, \"b\" => 2, \"c\" => 3))","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/#FSM-operations","page":"Finite State Machines","title":"FSM operations","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"CurrentModule = MarkovModels","category":"page"},{"location":"fsm/#Composition","page":"Finite State Machines","title":"Composition","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"compose","category":"page"},{"location":"fsm/#MarkovModels.compose","page":"Finite State Machines","title":"MarkovModels.compose","text":"compose(subfsms::Dict{Label, FSM}, fsm)\nBase.:∘(subfsms::Dict{Label, FSM}, fsm)\n\nReplace each state s in fsm by a \"subfsms\" from subfsms with associated label s.label. subfsms should be a Dict{<:Label, FSM}`.\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = union(LinearFSM([\"a\", \"b\"]), LinearFSM([\"c\"])) |> weightnormalize\nsubfsms = subfsms = Dict(\n    \"a\" => LinearFSM([\"a1\", \"a2\", \"a3\"], Dict(\"a1\"=>1, \"a2\"=>2, \"a3\"=>3)),\n    \"b\" => LinearFSM([\"b1\", \"b2\"], Dict(\"b1\"=>4, \"b2\"=>5)),\n    \"c\" => LinearFSM([\"c1\", \"c2\"], Dict(\"c1\"=>6, \"c2\"=>1))\n)\ncompose(subfsms, fsm)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input :","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"subfsms[\"a\"]","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"subfsms[\"b\"]","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"subfsms[\"c\"]","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: ) Output:   (Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Alternatively, FSMs can be composed with the ∘ operator:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm ∘ sufsms","category":"page"},{"location":"fsm/#Concatenation","page":"Finite State Machines","title":"Concatenation","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"concat","category":"page"},{"location":"fsm/#MarkovModels.concat","page":"Finite State Machines","title":"MarkovModels.concat","text":"concat(fsm1, fsm2, ...)\n\nConcatenate several FSMs into single FSM.\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example-2","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm1 = LinearFSM([\"a\", \"b\"])\nfsm2 = LinearFSM([\"c\", \"d\"])\nfsm3 = LinearFSM([\"e\"])\nconcat(fsm1, fsm2, fsm3)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm1","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm2","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm3","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output:   (Image: )","category":"page"},{"location":"fsm/#Determinization","page":"Finite State Machines","title":"Determinization","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"determinize","category":"page"},{"location":"fsm/#MarkovModels.determinize","page":"Finite State Machines","title":"MarkovModels.determinize","text":"determinize(fsm)\n\nTransform fsm such that each state has at most one link to any other states.\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example-3","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = FSM{Float64}()\ns1 = addstate!(fsm, label = \"a\")\ns2 = addstate!(fsm, label = \"b\", pdfindex = 1)\nlink!(s1, s2, log(1/2))\nlink!(s1, s2, log(1/2))\nlink!(initstate(fsm), s1)\nlink!(s2, finalstate(fsm))\nfsm |> determinize","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input: (Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output: (Image: )","category":"page"},{"location":"fsm/#Minimization","page":"Finite State Machines","title":"Minimization","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"minimize","category":"page"},{"location":"fsm/#MarkovModels.minimize","page":"Finite State Machines","title":"MarkovModels.minimize","text":"minimize(fsm)\n\nMerge equivalent states to reduce the size of the FSM. Only the states that have the same pdfindex and the same label can be potentially merged.\n\nwarning: Warning\nThe input FSM should not contain cycles otherwise the algorithm will never end.\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example-4","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = union(LinearFSM([\"a\", \"b\", \"c\"], Dict(\"a\"=>1)), LinearFSM([\"a\", \"d\", \"c\"], Dict(\"a\"=>1)))\nfsm |> minimize","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/#Nil-states-removal","page":"Finite State Machines","title":"Nil states removal","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"removenilstates","category":"page"},{"location":"fsm/#MarkovModels.removenilstates","page":"Finite State Machines","title":"MarkovModels.removenilstates","text":"removenilstates(fsm)\n\nRemove all states that are non-emitting and have no labels (except the the initial and final states)\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example-5","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = LinearFSM([\"a\", \"b\"], Dict(\"a\" => 1))\nnil = addstate!(fsm)\nlink!(initstate(fsm), nil)\nlink!(nil, finalstate(fsm))\nfsm = fsm |> weightnormalize\nfsm |> removenilstates","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Ouput:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/#Transposition","page":"Finite State Machines","title":"Transposition","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Base.transpose(::AbstractFSM{T}) where T","category":"page"},{"location":"fsm/#Base.transpose-Union{Tuple{MarkovModels.AbstractFSM{T}}, Tuple{T}} where T","page":"Finite State Machines","title":"Base.transpose","text":"transpose(fsm)\n\nTranspose the fsm, i.e. reverse all it's arcs. The final state becomes the initial state.\n\n\n\n\n\n","category":"method"},{"location":"fsm/#Example-6","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = LinearFSM([\"a\", \"b\", \"c\"])\ntranspose(fsm)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/#Union","page":"Finite State Machines","title":"Union","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Base.union(::AbstractFSM{T}, ::AbstractFSM{T}) where T","category":"page"},{"location":"fsm/#Base.union-Union{Tuple{T}, Tuple{MarkovModels.AbstractFSM{T},MarkovModels.AbstractFSM{T}}} where T","page":"Finite State Machines","title":"Base.union","text":"union(fsm1, fsm2, ...)\n∪(fsm1, fsm2, ...)\n\nMerge several FSMs into a single one.\n\n\n\n\n\n","category":"method"},{"location":"fsm/#Example-7","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm1 = LinearFSM([\"a\", \"b\", \"c\"], Dict(\"a\"=>1))\nfsm2 = LinearFSM([\"a\", \"d\", \"c\"], Dict(\"a\"=>1))\nunion(fsm1, fsm2)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm1\n(Image: See the online documentation to visualize the image)\nfsm2\n(Image: See the online documentation to visualize the image)","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/#Weight-normalization","page":"Finite State Machines","title":"Weight normalization","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"weightnormalize","category":"page"},{"location":"fsm/#MarkovModels.weightnormalize","page":"Finite State Machines","title":"MarkovModels.weightnormalize","text":"weightnormalize(fsm)\n\nChange the weight of the links such that the sum of the exponentiated weights of the outgoing links from one state will sum up to one.\n\n\n\n\n\n","category":"function"},{"location":"fsm/#Example-8","page":"Finite State Machines","title":"Example","text":"","category":"section"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"fsm = union(LinearFSM([\"a\", \"b\"]), LinearFSM([\"c\", \"d\"]))\nfor s in states(fsm)\n    if ! isinit(s) && ! isfinal(s)\n        link!(s, s)\n    end\nend\nfsm |> weightnormalize","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Input:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"Output:","category":"page"},{"location":"fsm/","page":"Finite State Machines","title":"Finite State Machines","text":"(Image: )","category":"page"},{"location":"install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/#Installation-of-Julia","page":"Installation","title":"Installation of Julia","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"The MarkovModels package was developped and tested with Julia 1.5.0. If you haven't installed Julia already, follow the instruction here.","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"tip: Tip\nIt is a common practice in Julia to use non-ascii characters while coding such as greek letters or mathematical symbols. We highly recommend to add Julia support to your editor to easily access these special characters. Plugin for vim/neovim and emacs can be found here.","category":"page"},{"location":"install/#Installation-of-MarkovModels","page":"Installation","title":"Installation of MarkovModels","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"In the Julia REPL prompt, press ] to enther the Pkg REPL and then type:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"(@v1.5) pkg> add https://github.com/BUTSpeechFIT/MarkovModels","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"This will install the package and its dependencies into your Julia installation.","category":"page"},{"location":"#MarkovModels-Documentation","page":"Home","title":"MarkovModels Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MarkovModels is a Julia package to use (Hidden) Markov Models for probabilistic inference.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Lucas Ondel, Brno University of Technology\nMartin Kocour, Brno University of Technology","category":"page"},{"location":"#Reference","page":"Home","title":"Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TODO: Add DOI","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"install.md\", \"fsm.md\"]","category":"page"}]
}
